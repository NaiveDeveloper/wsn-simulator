package org.jcjxb.wsn.service;

option java_package = "org.jcjxb.wsn.service.proto";
option java_outer_classname = "WSNConfig";
import "BasicDataType.proto";
message SensorConfig {
	optional double energy = 1; // Battery capacity
	optional double transmissionRadius = 2;
}

message SensorNodeDeployConfig {
	enum DeployType {
		RANDOM = 0;
		STATIC = 1;
		GRID = 2;
		CIRCLE = 3;
	}

	optional DeployType deployType = 1 [default = RANDOM];
	optional uint32 nodeNum = 2;
	optional SensorConfig sensorConfig = 3;
	optional PositionList postionList = 4;
}

message SinkNodeDeployConfig {
	enum DeployType {
		RANDOM = 0;
		STATIC = 1;
		ONEINCENTER =2;
	}

	optional DeployType deployType = 1 [default = RANDOM];
	optional uint32 nodeNum = 2;
	optional PositionList postionList = 4;
}

message SourceEventDeployConfig {
	enum DeployType {
		RANDOM = 0;
		STATIC = 1;
		ALLNODES = 2;
	}

	optional DeployType deployType = 1 [default = RANDOM];
	optional double radius = 2;
	optional uint32 eventNum = 3;
	optional uint32 eventInterval = 4;
	optional PositionList postionList = 5;
	optional uint32 times = 6; // not set and < 0 means indefinite
	optional uint32 eventBit = 7 [default = 100];
}

message DeployConfig {
	optional double width = 1;
	optional double height = 2;
	optional SensorNodeDeployConfig sensorNodeDeployConfig = 3;
	optional SinkNodeDeployConfig sinkNodeDeployConfig = 4;
	optional SourceEventDeployConfig sourceEventDeployConfig = 5;
}

message LeachConfig {
	optional uint32 clusterNum = 1;
	optional uint32 clusterBuiltCycle = 2;
	optional uint32 dataSubmitTimes = 3; // Data submit times in each sable period
	optional double aggregationRate = 4;
}

message AlgorithmConfig {
	optional string name = 1;
	optional LeachConfig leachConfig = 2;
}

message PartitionConfig {
	enum PartitionType {
		RANDOM = 0;
		STATIC = 1;
		CIRCLE = 2;
		GRID = 3;
	}

	optional PartitionType partitionType = 1;
	optional SensorsOnHostList sensorsOnHostList = 2;
}

message EnergyConsumeConfig {
	enum ConsumeType {
		STATIC = 0;
		SIMPLE = 1;
	}

	optional ConsumeType consumeType = 1;
	optional double transmitter = 2;
	optional double amplifier = 3;
	optional double receiver = 4;
	optional double exponent = 5;
	optional double sensor = 6;
}

message CommandConfig {
	enum Output {
		DETAIL = 0;
		SIMPLE = 1;
	}

	optional Output output = 1 [default = SIMPLE];
}

message SimulationConfig {
	optional DeployConfig deployConfig = 1;
	optional AlgorithmConfig algorithmConfig = 2;
	optional PartitionConfig partitionConfig = 3;
	optional EnergyConsumeConfig energyConsumeConfig = 4;
	optional CommandConfig commandConfig = 5;
	optional string name = 6;
}
